{"version":3,"file":"static/js/917.72484907.chunk.js","mappings":"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","sources":["Api/Api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Home/home.styled.js","pages/Home/Home.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '13fc79ed61eec20185351d88731f933a',\n};\n\nexport const fetchMostPopularMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchMovieForId = async id => {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fetchMoviesForQuery = async (name, page) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: name,\n      page: page,\n    },\n  });\n  return data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: ${p => p.theme.space[5]}px;\n  margin: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[0]}px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  text-align: center;\n  overflow: hidden;\n  border-radius: ${p => p.theme.radii.normal};\n  padding-bottom: ${p => p.theme.space[2]}px;\n  box-shadow: rgb(0 0 0 / 30%) 0px 10px 40px,\n    rgb(0 0 0 / 60%) -23px 0px 20px -23px, rgb(0 0 0 / 60%) 23px 0px 20px -23px,\n    rgb(0 0 0 / 10%) 0px 0px 40px inset;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 350px;\n  height: 525px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  transition-property: background-color, scale;\n  transition-duration: 0.25s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    scale: 1.3;\n    font-weight: bolder;\n  }\n`;\n\nexport const ListLink = styled(Link)`\n  text-decoration: none;\n  font-weight: bolder;\n  color: ${p => p.theme.colors.secondary};\n\n  transition-property: color;\n  transition-duration: 0.25s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.text};\n  }\n`;\n\nexport const VoteImage = styled.img`\n  margin-left: ${p => p.theme.space[3]}px;\n`;\n","import {\n  List,\n  ListItem,\n  ImageWrapper,\n  Image,\n  ListLink,\n  VoteImage,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ popularMovies }) => {\n  return (\n    <List>\n      {popularMovies.map(el => (\n        <ListItem key={el.id} id={el.id}>\n          <ListLink to={`/movies/${el.id}`}>\n            <ImageWrapper>\n              {' '}\n              <Image\n                src={\n                  el.poster_path\n                    ? `https://image.tmdb.org/t/p/original${el.poster_path}`\n                    : `https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg?w=2000`\n                }\n                alt=\"\"\n                width={350}\n              />\n            </ImageWrapper>\n            {el.title}\n            <VoteImage\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Star_icon_stylized.svg/512px-Star_icon_stylized.svg.png\"\n              alt=\"star\"\n              width=\"20px\"\n              style={{ display: 'inline-block' }}\n            />{' '}\n            {el.vote_average}/10\n          </ListLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  popularMovies: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  width: 260px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: rgb(0 0 0 / 30%) 0px 10px 40px,\n    rgb(0 0 0 / 60%) -23px 0px 20px -23px, rgb(0 0 0 / 60%) 23px 0px 20px -23px,\n    rgb(0 0 0 / 10%) 0px 0px 40px inset;\n`;\n","import { fetchMostPopularMovies } from 'Api/Api';\nimport { useState, useEffect } from 'react';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList.js';\nimport { Title } from 'pages/Home/home.styled.js';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState(null);\n\n  useEffect(() => {\n    fetchMostPopularMovies()\n      .then(({ results }) => setPopularMovies(results))\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending today</Title>\n      {popularMovies && <MoviesList popularMovies={popularMovies} />}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["axios","api_key","fetchMostPopularMovies","data","fetchMovieForId","id","fetchCast","fetchReviews","fetchMoviesForQuery","name","page","params","query","List","styled","p","theme","space","ListItem","radii","normal","ImageWrapper","Image","colors","white","ListLink","Link","secondary","text","VoteImage","MoviesList","popularMovies","map","el","to","src","poster_path","alt","width","title","style","display","vote_average","Title","useState","setPopularMovies","useEffect","then","results","catch","err","console","log"],"sourceRoot":""}
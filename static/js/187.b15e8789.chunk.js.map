{"version":3,"file":"static/js/187.b15e8789.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAsB,mCAAG,sGACbF,IAAAA,IAAU,wBADG,uBAC5BG,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,qDAKtBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,IAAAA,IAAA,iBAAoBK,EAApB,oBADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAS,mCAAG,WAAMD,GAAN,yFACAL,IAAAA,IAAA,iBAAoBK,EAApB,aADA,uBACfF,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTI,EAAY,mCAAG,WAAMF,GAAN,yFACHL,IAAAA,IAAA,iBAAoBK,EAApB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAmB,mCAAG,WAAOC,EAAMC,GAAb,yFACVV,IAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACNC,MAAOH,EACPC,KAAMA,KAJuB,uBACzBP,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,uD,8ICzBnBU,EAAcC,EAAAA,GAAAA,IAAH,2EACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPC,EAAaJ,EAAAA,GAAAA,GAAH,gWACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAED,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,MAAlB,IAMPC,EAAWP,EAAAA,GAAAA,GAAH,6OACR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACK,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,MAAlB,IAMPE,EAAgBR,EAAAA,GAAAA,EAAH,2FAGP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPM,EAAUT,EAAAA,GAAAA,EAAH,2CAIPU,EAAYV,EAAAA,GAAAA,KAAH,gD,SCQtB,EAlCoB,WAClB,OAA8BW,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRvB,EAAAA,EAAAA,IAAaqB,GACVG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBL,EAAWK,EAA5B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,KAGF,SAACf,EAAD,WACE,SAACK,EAAD,WACU,OAAPQ,QAAO,IAAPA,OAAA,EAAAA,EAASW,QAAS,EACjBX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASnC,EAApB,EAAoBA,GAApB,OACV,UAACgB,EAAD,YACE,UAACC,EAAD,YACE,SAACE,EAAD,uBACCe,MAEH,UAAChB,EAAD,YACE,SAACC,EAAD,wBACCgB,OAPUnC,EADL,KAaZ,iDAKT,C","sources":["Api/Api.js","pages/ReviewsPage/ReviewsPage.styled.js","pages/ReviewsPage/ReviewsPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '13fc79ed61eec20185351d88731f933a',\n};\n\nexport const fetchMostPopularMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchMovieForId = async id => {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fetchMoviesForQuery = async (name, page) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: name,\n      page: page,\n    },\n  });\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n  padding-left: ${p => p.theme.space[6]}px;\n\n  padding-right: ${p => p.theme.space[6]}px;\n`;\n\nexport const StyledList = styled.ul`\n  margin-top: ${p => p.theme.space[5]}px;\n  padding-top: ${p => p.theme.space[5]}px;\n  padding-bottom: ${p => p.theme.space[5]}px;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  gap: 20px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: rgb(0 0 0 / 30%) 0px 10px 40px,\n    rgb(0 0 0 / 60%) -23px 0px 20px -23px, rgb(0 0 0 / 60%) 23px 0px 20px -23px,\n    rgb(0 0 0 / 10%) 0px 0px 40px inset;\n`;\n\nexport const ListItem = styled.li`\n  padding: ${p => p.theme.space[5]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: rgb(0 0 0 / 30%) 0px 10px 40px,\n    rgb(0 0 0 / 60%) -23px 0px 20px -23px, rgb(0 0 0 / 60%) 23px 0px 20px -23px,\n    rgb(0 0 0 / 10%) 0px 0px 40px inset;\n`;\n\nexport const CommentAuthor = styled.p`\n  display: block;\n  text-align: center;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Comment = styled.p`\n  display: block;\n`;\n\nexport const Selection = styled.span`\n  font-weight: bolder;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'Api/Api';\n\nimport {\n  ListWrapper,\n  StyledList,\n  ListItem,\n  CommentAuthor,\n  Comment,\n  Selection,\n} from './ReviewsPage.styled';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(({ results }) => setReviews(results))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <ListWrapper>\n      <StyledList>\n        {reviews?.length > 0 ? (\n          reviews.map(({ author, content, id }) => (\n            <ListItem key={id}>\n              <CommentAuthor>\n                <Selection>Author: </Selection>\n                {author}\n              </CommentAuthor>\n              <Comment>\n                <Selection>Comment: </Selection>\n                {content}\n              </Comment>\n            </ListItem>\n          ))\n        ) : (\n          <h2>Havent any review</h2>\n        )}\n      </StyledList>\n    </ListWrapper>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["axios","api_key","fetchMostPopularMovies","data","fetchMovieForId","id","fetchCast","fetchReviews","fetchMoviesForQuery","name","page","params","query","ListWrapper","styled","p","theme","space","StyledList","radii","normal","ListItem","CommentAuthor","Comment","Selection","useState","reviews","setReviews","movieId","useParams","useEffect","then","results","catch","error","console","log","length","map","author","content"],"sourceRoot":""}